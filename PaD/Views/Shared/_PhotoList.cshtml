@using PagedList.Mvc
@model PagedList.IPagedList<PaD.ViewModels.PhotoViewModel>

@if (Model != null && Model.Count > 0)
{

<table class="table">
    <tr>
        <th></th>
        <th>
            @(Html.LabelFor(model => model.FirstOrDefault().Title))
        </th>
        <th>
            @(Html.LabelFor(model => model.FirstOrDefault().AveRating))
        </th>
        <th>
            @(Html.LabelFor(model => model.FirstOrDefault().Date))
        </th>
        <th>
            @(Html.LabelFor(model => model.FirstOrDefault().IsPhotoOfTheMonth))
        </th>
        <th>
            @(Html.LabelFor(model => model.FirstOrDefault().IsPhotoOfTheYear))
        </th>
        @*<th></th>*@
    </tr>
    @foreach (var item in Model)
    {
        <tr>
            <td>
                @{
                    var imgSrc = item.ThumbnailImage.ImgSrc;
                    var url = item.GetUrl(item.UserName);
                }
                <a href="@url" onclick="doPushState($('#contentPager li.active a').text());">
                    <img src="@imgSrc" title="@item.Title" alt="@item.Alt" class="img-responsive" />
                </a>
            </td>
            <td>
                <a href="@url">
                    @Html.DisplayFor(modelItem => item.Title)
                </a>
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.AveRating) / 5.0
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Date)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.IsPhotoOfTheMonth)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.IsPhotoOfTheYear)
            </td>
            @*<td>
                @Html.ActionLink("Edit", "Edit", new { id = item.PhotoId }) |
                @Html.ActionLink("Details", "Details", new { id = item.PhotoId }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.PhotoId })
            </td>*@
        </tr>
    }
</table>
    
    <div id="contentPager">
        @Html.PagedListPager(
            Model,
            page => Url.Action(
                "Search",
                "Home",
                new
                {
                    queryString = ViewBag.QueryString,
                    userName = ViewBag.UserName,
                    isPhotoOfTheMonth = ViewBag.IsPhotoOfTheMonth,
                    isPhotoOfTheYear = ViewBag.IsPhotoOfTheYear,
                    page = page,
                }
            ),
            new PagedListRenderOptions
            {
                LinkToFirstPageFormat = "<<",
                LinkToPreviousPageFormat = "prev",
                LinkToNextPageFormat = "next",
                LinkToLastPageFormat = ">>",
            }
        )
    </div>
}
else
{
    <div class="alert-danger">No Hits</div>
}
