@model PagedList.IPagedList<PaD.ViewModels.PhotoViewModel>

@{
    ViewBag.Title = "Search";
}
<h2>@ViewBag.Title</h2>

@using (Ajax.BeginForm("Search",
    null,
    new AjaxOptions
    {
        HttpMethod = "POST",
        UpdateTargetId = "searchResults",
        InsertionMode = InsertionMode.Replace
    },
    new { id = "searchForm" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        <div class="form-group">
            @(Html.Label("Search", new { @class = "control-label col-md-2" }))
            <div class="col-md-10">
                @Html.TextBox("QueryString", "", new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            @(Html.Label("User", new { @class = "control-label col-md-2" }))
            <div class="col-md-10">
                @Html.TextBox("UserName", "", new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <div class="checkbox">
                    <label>
                        @Html.CheckBox("IsPhotoOfTheMonth")
                        @Html.Label("Photo of the Month", new { @class = "control-label" })
                    </label>
                </div>
            </div>
            <div class="col-md-offset-2 col-md-10">
                <div class="checkbox">
                    <label>
                        @Html.CheckBox("IsPhotoOfTheYear")
                        @Html.Label("Photo of the Year", new { @class = "control-label" })
                    </label>
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Search" class="btn btn-default" />
                <input type="reset" value="Reset" class="btn btn-default" />
            </div>
        </div>

    </div>

}

<br />

<div id="searchResults">
    @if (Model != null && Model.Count > 0)
    {
        @Html.Partial("_PhotoList", Model)
    }
</div>

@section scripts
{
    <script language="javascript" type="text/javascript">

        $(document).ready(function () {

            // Set the form to the values reflected in the url (if any).
            var queryParameters = getQueryParameters();
            $("#QueryString").val(decodeURIComponent(queryParameters.queryString));
            $("#UserName").val(decodeURIComponent(queryParameters.userName));
            $("#IsPhotoOfTheMonth").prop('checked', queryParameters.isPhotoOfTheMonth);
            $("#IsPhotoOfTheYear").prop('checked', queryParameters.isPhotoOfTheYear);

            $("#searchForm").submit(function (event) {

                doPushState();
            });

            $(document).on("click", "#contentPager a[href]", function () {

                // get page of clicked anchor
                var page = getParameterByName("page", $(this).attr('href'));

                doPushState(page);

                $.ajax({
                    url: window.location.href,
                    data: AddAntiForgeryToken({ id: parseInt($(this).attr("title")) }),
                    type: 'POST',
                    cache: false,
                    success: function (result) {
                        $('#searchResults').html(result);
                    }
                });

                return false;
            });

            $(document).on("click", ":reset", function () {
                $("#searchResults").html("");
                return true;
            });

        });

        window.onpopstate = function (e) {

            // If we didn't push this state, then don't handle it.
            if (!e.state.myTag) return;

            // Populate form controls with values in URL.
            var queryParameters = getQueryParameters();

            $("#QueryString").val(decodeURIComponent(queryParameters.queryString));
            $("#UserName").val(decodeURIComponent(queryParameters.userName));
            $("#IsPhotoOfTheMonth").prop('checked', queryParameters.isPhotoOfTheMonth);
            $("#IsPhotoOfTheYear").prop('checked', queryParameters.isPhotoOfTheYear);

            // If values are all at reset state, reset the form
            if (queryParameters.queryString == '' &&
                    queryParameters.userName == '' &&
                    queryParameters.isPhotoOfTheMonth == false &&
                    queryParameters.isPhotoOfTheYear == false) {

                $('#searchResults').html('');
                return;
            }

            // URL to get the search data
            var url = "/Home/Search?queryString=" + queryParameters.queryString +
                        "&userName=" + queryParameters.userName +
                        "&isPhotoOfTheMonth=" + queryParameters.isPhotoOfTheMonth +
                        "&isPhotoOfTheYear=" + queryParameters.isPhotoOfTheYear +
                        "&page=" + queryParameters.page;

            $.ajax({
                url: url,
                data: AddAntiForgeryToken({ id: parseInt($(this).attr("title")) }),
                type: 'POST',
                cache: false,
                success: function (result) {
                    $('#searchResults').html(result);
                }
            });
        }

        var doPushState = function (page) {

            if (page == null || page == '') {
                page = 1;
            }

            // Build the URl and query string to push
            var url = "/home/search";
            var queryString = "?queryString=" + encodeURIComponent($("#QueryString").val())
                + "&userName=" + encodeURIComponent($("#UserName").val())
                + "&isPhotoOfTheMonth=" + $("#IsPhotoOfTheMonth").is(":checked")
                + "&isPhotoOfTheYear=" + $("#IsPhotoOfTheYear").is(":checked")
                + "&page=" + page;

            history.pushState({ myTag: true }, '', url + queryString);
        }

        var getQueryParameters = function () {

            var queryString = getParameterByName("queryString");
            if (!queryString) {
                queryString = ""
            }

            var userName = getParameterByName("userName");
            if (!userName) {
                userName = ""
            }

            var isPhotoOfTheMonth = getParameterByName("isPhotoOfTheMonth") == "true";
            var isPhotoOfTheYear = getParameterByName("isPhotoOfTheYear") == "true";

            var page = getParameterByName("page");
            if (!page) {
                page = 1;
            }
            else {
                page = decodeURIComponent(page);
            }

            var obj = {
                queryString: queryString,
                userName: userName,
                isPhotoOfTheMonth: isPhotoOfTheMonth,
                isPhotoOfTheYear: isPhotoOfTheYear,
                page: page
            };

            return obj;
        }

        var getParameterByName = function(name, url) {
            if (!url) {
                url = window.location.href;
            }
            name = name.replace(/[\[\]]/g, "\\$&");
            var regex = new RegExp("[?&]" + name + "(=([^&#]*)|&|#|$)"),
                results = regex.exec(url);
            if (!results) return null;
            if (!results[2]) return '';
            return decodeURIComponent(results[2].replace(/\+/g, " "));
        }

        //var getQueryParameter = function getQueryParameter(sParam) {

        //    var sPageURL = decodeURIComponent(window.location.search.substring(1)),
        //        sURLVariables = sPageURL.split('&'),
        //        sParameterName,
        //        i;

        //    for (i = 0; i < sURLVariables.length; i++) {
        //        sParameterName = sURLVariables[i].split('=');

        //        if (sParameterName[0] === sParam) {
        //            return sParameterName[1] === undefined ? true : sParameterName[1];
        //        }
        //    }
        //};

        window.onload = function (e) {

            history.replaceState({ myTag: true }, null, document.URL);
        }

    </script>
}
